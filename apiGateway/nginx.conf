events {}

http {
    upstream client {
        server client-service:3000;
    }

    upstream userManagement {
        server user-management-service:3002;
    }

    upstream pricingService {
        server pricing-service:3004;
    }

    server {
        listen 80;

        location /login {
            proxy_pass http://userManagement;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /session {
            proxy_pass http://userManagement;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /logout {
            proxy_pass http://userManagement;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /api/v1/users/ {
            proxy_pass http://userManagement;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /api/v1/pricing {
            # Call user management for authentication
            auth_request /auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $auth_user $upstream_http_x_pp_user;
            auth_request_set $auth_token $upstream_http_x_pp_token;
            auth_request_set $auth_token_expiry $upstream_http_x_pp_token_expiry;

            # Return 401 Unauthorized if auth_status fails
            if ($auth_status = 401) {
                return 401;
            }

            # If authenticated, forward to service
            proxy_pass http://pricingService;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Pp-User $auth_user;
            proxy_set_header X-Pp-Token $auth_token;
            proxy_set_header X-Pp-Token-Expiry $auth_token_expiry;
            proxy_pass_request_headers on;
        }

        location /auth {
            internal;
            proxy_pass http://userManagement/session;
            proxy_set_header Host $host;
            proxy_set_header Content-Length "";
            proxy_pass_request_body off;
            proxy_hide_header Set-Cookie;
            proxy_set_header X-From-Nginx "true";
            proxy_set_header X-Pp-User $upstream_http_x_pp_user;
            proxy_set_header X-Pp-Token $upstream_http_x_pp_token;
            proxy_set_header X-Pp-Token-Expiry $upstream_http_x_pp_token_expiry;
        }

        location / {
            proxy_pass http://client;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
    }
}
